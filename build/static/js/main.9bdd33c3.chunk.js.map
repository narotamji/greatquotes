{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","Pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","Pages/QuoteDetail.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","MainNavigation","header","logo","nav","to","activeClassName","active","Layout","props","main","children","QuoteItem","item","text","author","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathName","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","NotFound","NewCommentForm","commentTextRef","useRef","commentNameRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","enteredName","form","onSubmit","control","htmlFor","ref","rows","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","params","match","useRouteMatch","path","exact","url","NewQuote","React","lazy","App","fallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bdd33c3.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://in-custom-hooks-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__KlTic\",\"logo\":\"MainNavigation_logo__1pEhY\",\"nav\":\"MainNavigation_nav__13ZCT\",\"active\":\"MainNavigation_active__1WdaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1g0Kd\",\"loading\":\"NewCommentForm_loading__AEfUq\",\"control\":\"NewCommentForm_control__2UkDc\",\"actions\":\"NewCommentForm_actions__191Y-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2fPJM\",\"sorting\":\"QuoteList_sorting__1s6r_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__zTgc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2itCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2_d_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1hPnw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3kv9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2cVKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__pAoq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3QOne\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './MainNavigation.module.css'\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li><NavLink to='/quotes' activeClassName={classes.active}>All Quotes</NavLink></li>\r\n                    <li><NavLink to='/new-quote' activeClassName={classes.active}>New Quote</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNavigation\r\n","import React, { Fragment } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathName: location.pathName,\n      search: `?sort=${(isSortingAscending ? \"desc\" : \"asc\")}`\n    });\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? \"desc\" : \"asc\")}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuoteFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n// const DUMMY_DATA = [\r\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n//   { id: \"q2\", author: \"Narotam\", text: \"Learning React is great!\" },\r\n// ];\r\n\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n      return <p className='centered focused'>{error}</p>\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n      return <NoQuoteFound />\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className='centered'>\r\n            <h2>Page Not Found</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const commentNameRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const {onAddedComment} = props;\n\n  useEffect(()=>{\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  },[status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n    const enteredName = commentNameRef.current.value;\n    sendRequest({commentData:{ text: enteredText, name: enteredName }, quoteId: props.quoteId});\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pendind\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"name\">Your name</label>\n        <input type=\"text\" id=\"name\" name=\"name\" ref={commentNameRef} />\n      </div>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <h2>{props.text}</h2>\n      <span>~{props.name}</span>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} name={comment.name}/>\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId} = params;\n  const {sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(()=>{\n    sendRequest(quoteId);\n  },[quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n      sendRequest(quoteId);\n  },[sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (<div><LoadingSpinner /></div>);\n  }\n\n  if (status === 'completed' && loadedComments) {\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuoteFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n// const DUMMY_DATA = [\r\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n//   { id: \"q2\", author: \"Narotam\", text: \"Learning React is great!\" },\r\n// ];\r\n\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  // const quote = DUMMY_DATA.find((quote) => quote.id === params.quoteId);\r\n  const match = useRouteMatch();\r\n  const {quoteId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n  \r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n      return <p className='centered focused'>{error}</p>\r\n  }\r\n\r\n  if (!loadedQuotes.text) {\r\n      return <NoQuoteFound />\r\n  }\r\n\r\n  // if (!quote) {\r\n  //   return <h2 className=\"centered\">No Quote Found!</h2>;\r\n  // }\r\n  return (\r\n    <section>\r\n      <HighlightedQuote text={loadedQuotes.text} author={loadedQuotes.author} />\r\n      <Route path={match.path} exact>\r\n      <div className=\"centered\">\r\n        <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n          Load Comments\r\n        </Link>\r\n      </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import React, { Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport AllQuotes from \"./Pages/AllQuotes\";\n// import NewQuote from \"./Pages/NewQuote\";\nimport NotFound from \"./Pages/NotFound\";\nimport QuoteDetail from \"./Pages/QuoteDetail\";\n\nconst NewQuote = React.lazy(()=> import('./Pages/NewQuote'));\n\nfunction App() {\n  return (\n    <Layout>\n    <Suspense fallback={<div className='centered'><LoadingSpinner /></div>}>\n    <Switch>\n      <Route path='/' exact>\n        <Redirect to='/quotes'/>\n      </Route>\n      <Route path='/quotes' exact>\n        <AllQuotes />\n      </Route>\n      <Route path='/quotes/:quoteId'>\n        <QuoteDetail />\n      </Route>\n      <Route path='/new-quote'>\n        <NewQuote />\n      </Route>\n      <Route path='*'>\n        <NotFound />\n      </Route>\n    </Switch>\n    </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}